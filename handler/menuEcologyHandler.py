from contextlib import suppress

from aiogram import Router
from aiogram.enums import ParseMode
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import CallbackQuery

from buttons.inlinebuttons.FormMainButton import in_Form_Ecology
from states.WorldStates import CountryStates

router = Router()


# ============================ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–º—Å Ecology ==========================
@router.callback_query(lambda c: c.data == 'main_ecology', CountryStates.main_keyboard)
async def ecology_menu_callback(call: CallbackQuery, state: CountryStates.main_keyboard):
    await call.message.edit_reply_markup()
    user_data = await state.get_data()
    getFormCountry = user_data['form']
    country_Info = getFormCountry['form']
    ecology = user_data['world']['ecology']
    textForEdited = f"üó∫Ô∏è –°—Ç—Ä–∞–Ω–∞ üó∫Ô∏è\n" \
                    f"{country_Info['title']}\n" \
                    f"üí∏ {country_Info['balanceInfo']} üí≤\n\n" \
                    f"üå±<b>–≠–∫–æ–ª–æ–≥–∏—è</b>üå±\n" \
                    f"{round(ecology, 2)}\n\n" \
                    f"–¶–µ–Ω—ã: \n" \
                    f"–≠–∫–æ–ª–æ–≥–∏—è x1 --- <b> 150 üí≤</b>\n" \
                    f"–≠–∫–æ–ª–æ–≥–∏—è x2 --- <b> 300 üí≤</b>\n" \
                    f"–≠–∫–æ–ª–æ–≥–∏—è x3 --- <b> 450 üí≤</b>\n\n" \
                    f"–ö–æ–ª-–≤–æ –≤–ª–æ–∂–µ–Ω–∏–π –≤ —ç–∫–æ–ª–æ–≥–∏—é: {country_Info['ecology']}"
    await call.message.edit_text(
        text=textForEdited,
        parse_mode=ParseMode.HTML,
        inline_message_id=call.inline_message_id,
        reply_markup=in_Form_Ecology()
    )


@router.callback_query(lambda c: c.data == "ecology_add", CountryStates.main_keyboard)
async def ecology_x_callback(call: CallbackQuery, state: CountryStates.main_keyboard):
    user_data = await state.get_data()
    getFormCountry = user_data['form']
    country_Info = getFormCountry['form']
    ecology = user_data['world']['ecology']
    ecology_list = user_data.get('ecology_x')
    if ecology_list is not None:
        ecology_list = user_data['ecology_x']
    else:
        ecology_list = []
    if len(ecology_list) == 0:
        # –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç
        ecology_list.append(1)
        country_Info['ecology'] += 1
        country_Info['balanceInfo'] -= 150
    else:
        if len(ecology_list) >= 3:
            await call.answer(
                text="–ë–æ–ª—å—à–µ 3 —Ä–∞–∑ –≤–ª–æ–∂–∏—Ç—å—Å—è –Ω–µ–ª—å–∑—è"
            )
        else:
            ecology_list.append(1)
            country_Info['ecology'] = len(ecology_list)
            country_Info['balanceInfo'] -= 150

    textForEdited = f"üó∫Ô∏è –°—Ç—Ä–∞–Ω–∞ üó∫Ô∏è\n" \
                    f"{country_Info['title']}\n" \
                    f"üí∏ {country_Info['balanceInfo']} üí≤\n\n" \
                    f"üå±<b>–≠–∫–æ–ª–æ–≥–∏—è</b>üå±\n" \
                    f"{round(ecology, 2)}\n\n" \
                    f"–¶–µ–Ω—ã: \n" \
                    f"–≠–∫–æ–ª–æ–≥–∏—è x1 --- <b> 150 üí≤</b>\n" \
                    f"–≠–∫–æ–ª–æ–≥–∏—è x2 --- <b> 300 üí≤</b>\n" \
                    f"–≠–∫–æ–ª–æ–≥–∏—è x3 --- <b> 450 üí≤</b>\n\n" \
                    f"<i>–ö–æ–ª-–≤–æ –≤–ª–æ–∂–µ–Ω–∏–π –≤ —ç–∫–æ–ª–æ–≥–∏—é: <b>{country_Info['ecology']}</b></i>"
    await state.update_data(ecology_x=ecology_list)
    with suppress(TelegramBadRequest):
        await call.message.edit_text(
            text=textForEdited,
            parse_mode=ParseMode.HTML,
            inline_message_id=call.inline_message_id,
            reply_markup=in_Form_Ecology()
        )


@router.callback_query(lambda c: c.data == "ecology_remove", CountryStates.main_keyboard)
async def ecology_remove_callback(call: CallbackQuery, state: CountryStates.main_keyboard):
    user_data = await state.get_data()
    getFormCountry = user_data['form']
    country_Info = getFormCountry['form']
    ecology = user_data['world']['ecology']
    ecology_list = user_data.get('ecology_x')
    if ecology_list is not None:
        ecology_list = user_data['ecology_x']
        amount_ecology = len(ecology_list)
        country_Info['balanceInfo'] += 150 * amount_ecology
        ecology_list = []
        country_Info['ecology'] = 0
        await call.answer(
            text="–û—á–∏—Å—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ"
        )
        textForEdited = f"üó∫Ô∏è –°—Ç—Ä–∞–Ω–∞ üó∫Ô∏è\n" \
                        f"{country_Info['title']}\n" \
                        f"üí∏ {country_Info['balanceInfo']} üí≤\n\n" \
                        f"üå±<b>–≠–∫–æ–ª–æ–≥–∏—è</b>üå±\n" \
                        f"{round(ecology, 2)}\n\n" \
                        f"–¶–µ–Ω—ã: \n" \
                        f"–≠–∫–æ–ª–æ–≥–∏—è x1 --- <b> 150 üí≤</b>\n" \
                        f"–≠–∫–æ–ª–æ–≥–∏—è x2 --- <b> 300 üí≤</b>\n" \
                        f"–≠–∫–æ–ª–æ–≥–∏—è x3 --- <b> 450 üí≤</b>\n\n" \
                        f"–ö–æ–ª-–≤–æ –≤–ª–æ–∂–µ–Ω–∏–π –≤ —ç–∫–æ–ª–æ–≥–∏—é: {country_Info['ecology']}"
        await state.update_data(ecology_x=ecology_list)
        with suppress(TelegramBadRequest):
            await call.message.edit_text(
                text=textForEdited,
                parse_mode=ParseMode.HTML,
                inline_message_id=call.inline_message_id,
                reply_markup=in_Form_Ecology()
            )
    else:
        await call.answer(
            text="–û—á–∏—â–µ–Ω–æ: 0"
        )
